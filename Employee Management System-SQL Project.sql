-- Employee Management System
CREATE DATABASE EMP_MANAGEMENT_SYS_DB;
USE EMP_MANAGEMENT_SYS_DB;

-- Table 1: Job Department
CREATE TABLE JobDepartment (
    Job_ID INT PRIMARY KEY,
    jobdept VARCHAR(50),
    name VARCHAR(100),
    description TEXT,
    salaryrange VARCHAR(50)
);

-- Table 2: Salary/Bonus
CREATE TABLE SalaryBonus (
    salary_ID INT PRIMARY KEY,
    Job_ID INT,
    amount DECIMAL(10,2),
    annual DECIMAL(10,2),
    bonus DECIMAL(10,2),
    CONSTRAINT fk_salary_job FOREIGN KEY (job_ID) REFERENCES JobDepartment(Job_ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);
-- Table 3: Employee
CREATE TABLE Employee (
    emp_ID INT PRIMARY KEY,
    firstname VARCHAR(50),
    lastname VARCHAR(50),
    gender VARCHAR(10),
    age INT,
    contact_add VARCHAR(100),
    emp_email VARCHAR(100) UNIQUE,
    emp_pass VARCHAR(50),
    Job_ID INT,
    CONSTRAINT fk_employee_job FOREIGN KEY (Job_ID)
     REFERENCES JobDepartment(Job_ID)
        ON DELETE SET NULL
        ON UPDATE CASCADE
);

-- Table 4: Qualification
CREATE TABLE Qualification (
    QualID INT PRIMARY KEY,
    Emp_ID INT,
    Position VARCHAR(50),
    Requirements VARCHAR(255),
    Date_In DATE,
    CONSTRAINT fk_qualification_emp FOREIGN KEY (Emp_ID)
        REFERENCES Employee(emp_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- Table 5: Leaves
CREATE TABLE Leaves (
    leave_ID INT PRIMARY KEY,
    emp_ID INT,
    date DATE,
    reason TEXT,
    CONSTRAINT fk_leave_emp FOREIGN KEY (emp_ID) REFERENCES Employee(emp_ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table 6: Payroll
CREATE TABLE Payroll (
    payroll_ID INT PRIMARY KEY,
    emp_ID INT,
    job_ID INT,
    salary_ID INT,
    leave_ID INT,
    date DATE,
    report TEXT,
    total_amount DECIMAL(10,2),
    CONSTRAINT fk_payroll_emp FOREIGN KEY (emp_ID) REFERENCES Employee(emp_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_payroll_job FOREIGN KEY (job_ID) REFERENCES JobDepartment(job_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_payroll_salary FOREIGN KEY (salary_ID) REFERENCES SalaryBonus(salary_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_payroll_leave FOREIGN KEY (leave_ID) REFERENCES Leaves(leave_ID)
        ON DELETE SET NULL ON UPDATE CASCADE
);
-- EMPLOYEE DATASET VALUES ARE INSERTED SUCCESSFULLY

-- Analysis Questions
-- 1. EMPLOYEE INSIGHTS
-- Q1. How many unique employees are currently in the system?

SELECT COUNT(DISTINCT EMP_ID) AS UNIQUE_EMP_COUNT 
FROM EMPLOYEE;


-- Q2. Which departments have the highest number of employees?
SELECT JD.JOBDEPT AS DEPT_NAME,COUNT(E.EMP_ID) AS EMP_COUNT
FROM EMPLOYEE E 
JOIN JOBDEPARTMENT JD ON E.JOB_ID = JD.JOB_ID
GROUP BY JD.JOBDEPT
ORDER BY EMP_COUNT DESC;
-- FINANCE and IT departments have highest number of employees

-- Q3. What is the average salary per department?
SELECT JD.JOBDEPT AS DEPT_NAME,
ROUND(AVG(SB.AMOUNT),2) AS AVG_SALARY
FROM JOBDEPARTMENT JD
JOIN SALARYBONUS SB ON JD.JOB_ID = SB.JOB_ID
GROUP BY JD.JOBDEPT
ORDER BY AVG_SALARY DESC;


-- Q4. Who are the top 5 highest-paid employees?
SELECT E.EMP_ID,E.FIRSTNAME,JD.NAME,JD.JOBDEPT,SB.AMOUNT
FROM EMPLOYEE E
JOIN JOBDEPARTMENT JD ON E.JOB_ID = JD.JOB_ID
JOIN SALARYBONUS SB ON JD.JOB_ID = SB.JOB_ID
ORDER BY SB.AMOUNT DESC LIMIT 5;


-- Q5. What is the total salary expenditure across the company?
SELECT SUM(AMOUNT) AS TOTAL_SAL_EXPENDITURE
FROM SALARYBONUS;


-- 2. JOB ROLE AND DEPARTMENT ANALYSIS
-- Q6. How many different job roles exist in each department?
SELECT JD.JOBDEPT AS DEPARTMENT_NAME,
COUNT(DISTINCT JD.NAME) AS JOB_ROLES_COUNT
FROM JOBDEPARTMENT JD 
GROUP BY JD.JOBDEPT
ORDER BY JOB_ROLES_COUNT DESC;

-- Q7. What is the average salary range per department?
SELECT JOBDEPT AS DEPARTMENT,
ROUND((AVG((MIN_SALARY) + (MAX_SALARY)) / 2),2) AS AVG_SALARY_RANGE
FROM (
SELECT JOBDEPT,
CAST(TRIM(REPLACE(REPLACE(SUBSTRING_INDEX(SALARYRANGE, '-',1),'$',''),',','')) AS DECIMAL(10,2)) AS MIN_SALARY,
CAST(TRIM(REPLACE(REPLACE(SUBSTRING_INDEX(SALARYRANGE, '-',-1),'$',''),',','')) AS DECIMAL(10,2)) AS MAX_SALARY
FROM JOBDEPARTMENT
) AS PARSED
GROUP BY JOBDEPT;

-- Q8. Which job roles offer the highest salary?
SELECT JD.JOB_ID,JD.JOBDEPT,JD.NAME AS JOB_ROLE,SB.AMOUNT AS SALARY
FROM JOBDEPARTMENT JD
JOIN SALARYBONUS SB ON JD.JOB_ID = SB.JOB_ID
ORDER BY SB.AMOUNT DESC LIMIT 5;

-- Q9. Which departments have the highest total salary allocation?
SELECT JOBDEPT AS DEPARTMENT,SUM(SB.AMOUNT) AS TOTAL_SALARY
FROM JOBDEPARTMENT JD
JOIN SALARYBONUS SB ON JD.JOB_ID = SB.JOB_ID
GROUP BY JD.JOBDEPT
ORDER BY TOTAL_SALARY DESC;
-- FINANCE DEPARTMENT HAS THE HIGHEST TOTAL SALARY

-- 3. QUALIFICATION AND SKILLS ANALYSIS
-- Q10. How many employees have at least one qualification listed?
SELECT COUNT(DISTINCT EMP_ID) AS EMP_WITH_QUALIFICATION_COUNT
FROM QUALIFICATION;

-- Q11. Which positions require the most qualifications?
SELECT POSITION,COUNT(QUALID) AS QUALIFICATION_COUNT
FROM QUALIFICATION
GROUP BY POSITION
ORDER BY QUALIFICATION_COUNT DESC;

-- Q12. Which employees have the highest number of qualifications?
SELECT E.FIRSTNAME,E.LASTNAME, COUNT(Q.QUALID) AS QUALIFICATION_COUNT
FROM EMPLOYEE E
JOIN QUALIFICATION Q ON E.EMP_ID = Q.EMP_ID
GROUP BY E.EMP_ID,E.FIRSTNAME,E.LASTNAME
ORDER BY QUALIFICATION_COUNT DESC;

-- 4. LEAVE AND ABSENCE PATTERNS
-- Q13. Which year had the most employees taking leaves?
SELECT YEAR(DATE) AS LEAVE_YEAR,
COUNT(DISTINCT EMP_ID) AS EMP_ON_LEAVE
FROM LEAVES
GROUP BY YEAR(DATE)
ORDER BY EMP_ON_LEAVE DESC;

-- Q14. What is the average number of leave days taken by its employees per department?
SELECT JD.JOBDEPT, ROUND(AVG(LEAVE_COUNT),0) AS AVG_LEAVE_DAYS
FROM (
SELECT E.EMP_ID, COUNT(L.LEAVE_ID) AS LEAVE_COUNT
FROM EMPLOYEE E
JOIN LEAVES L ON E.EMP_ID = L.EMP_ID
GROUP BY EMP_ID
) EMP_LEAVES
JOIN EMPLOYEE E ON EMP_LEAVES.EMP_ID = E.EMP_ID
JOIN JOBDEPARTMENT JD ON E.JOB_ID = JD.JOB_ID
GROUP BY JD.JOBDEPT;

-- Q15. Which employees have taken the most leaves?
SELECT E.EMP_ID,E.FIRSTNAME,E.LASTNAME,COUNT(L.LEAVE_ID) AS LEAVE_COUNT
FROM EMPLOYEE E
JOIN LEAVES L ON E.EMP_ID = L.EMP_ID
GROUP BY E.EMP_ID,E.FIRSTNAME,E.LASTNAME
ORDER BY LEAVE_COUNT DESC;

-- Q16. What is the total number of leave days taken company-wide?
SELECT COUNT(*) AS TOTAL_LEAVE_DAYS FROM LEAVES;

-- Q17. How do leave days correlate with payroll amounts?
SELECT E.FIRSTNAME,E.LASTNAME,COUNT(L.LEAVE_ID) AS LEAVE_COUNT,
ROUND(AVG(P.TOTAL_AMOUNT),2) AS AVG_PAYROLL
FROM EMPLOYEE E 
JOIN PAYROLL P ON E.EMP_ID = P.EMP_ID
LEFT JOIN LEAVES L ON E.EMP_ID = L.EMP_ID
GROUP BY E.EMP_ID,E.FIRSTNAME,E.LASTNAME;

-- 5. PAYROLL AND COMPENSATION ANALYSIS
-- Q18. What is the total monthly payroll processed?
SELECT YEAR(DATE) AS YEAR, MONTH(DATE) AS MONTH, SUM(TOTAL_AMOUNT) AS TOTAL_MONTHLY_PAYROLL
FROM PAYROLL
GROUP BY YEAR(DATE), MONTH(DATE)
ORDER BY YEAR DESC, MONTH DESC;

-- Q19. What is the average bonus given per department?
SELECT JD.JOBDEPT AS DEPARTMENT,ROUND(AVG(SB.BONUS),2) AS AVG_BONUS
FROM JOBDEPARTMENT JD
JOIN SALARYBONUS SB ON JD.JOB_ID = SB.JOB_ID
GROUP BY JD.JOBDEPT;

-- Q20. Which department receives the highest total bonuses?
SELECT JD.JOBDEPT AS DEPARTMENT, SUM(SB.BONUS) AS TOTAL_BONUS
FROM JOBDEPARTMENT JD
JOIN SALARYBONUS SB ON JD.JOB_ID = SB.JOB_ID
GROUP BY JD.JOBDEPT
ORDER BY TOTAL_BONUS DESC;

-- Q21. What is the average value of total_amount after considering leave deductions?
SELECT ROUND(AVG(TOTAL_AMOUNT),2) AS AVG_TOTAL_AFTER_LEAVES 
FROM PAYROLL;

-- 6. EMPLOYEE PERFORMANCE AND GROWTH
-- Q22. Which year had the highest number of employee promotions?
-- THERE IS NO PROMOTION TABLE
-- ASSUMED QUALIFICATION TABLE DATE_IN COLUMN FOR PROMOTIONS, IS WHEN AN EMPLOYEE GETS A NEW POSITION
SELECT YEAR(DATE_IN) AS YEAR, COUNT(*) AS PROMOTIONS
FROM QUALIFICATION 
GROUP BY YEAR(DATE_IN)
ORDER BY PROMOTIONS DESC;


